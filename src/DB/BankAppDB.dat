CREATE TABLE BANKS (
    BANK_ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    BANK_NAME VARCHAR(255));

    CREATE TABLE CLIENTS (
    CLIENT_ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    CLIENT_NAME VARCHAR(255),
    CLIENT_MAIL VARCHAR(255),
    CLIENT_PHONE_NUMBER VARCHAR(255),
    BANK_ID INT,

	FOREIGN KEY(BANK_ID)
	REFERENCES BANKS(BANK_ID));

    CREATE TABLE SAVING_ACCOUNTS (
    ACCOUNT_ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    CLIENT_ID INT,
    BANK_ID INT,
    BALANCE float(2),

    FOREIGN KEY(CLIENT_ID)
	REFERENCES CLIENTS(CLIENT_ID),

	FOREIGN KEY(BANK_ID)
	REFERENCES BANKS(BANK_ID)
    );

    CREATE TABLE CHECKING_ACCOUNTS (
    ACCOUNT_ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    CLIENT_ID INT,
    BANK_ID INT,
    BALANCE float(2),
    OVERDRAFT float(2),

    FOREIGN KEY(CLIENT_ID)
	REFERENCES CLIENTS(CLIENT_ID),

	FOREIGN KEY(BANK_ID)
	REFERENCES BANKS(BANK_ID)
    );

	CREATE TABLE BANKS_ACCOUNTS (
    ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    BANK_ID INT,
	CHECKING_ACCOUNT_ID INT,
    SAVING_ACCOUNT_ID INT,
    CLIENT_ID INT,

	FOREIGN KEY(BANK_ID)
	REFERENCES BANKS(BANK_ID),

	FOREIGN KEY(CHECKING_ACCOUNT_ID)
	REFERENCES CHECKING_ACCOUNTS(ACCOUNT_ID),

    FOREIGN KEY(SAVING_ACCOUNT_ID)
	REFERENCES SAVING_ACCOUNTS(ACCOUNT_ID),

	FOREIGN KEY(CLIENT_ID)
	REFERENCES CLIENTS(CLIENT_ID));

INSERT INTO BANKS(BANK_NAME) VALUES('Financial Bank');

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Tomasz Piorowski', 'tomekP@op.pl', '789654889', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Eugeniusz Markowski', 'gienek@op.pl', '755214369', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Przemyslaw Raczkowski', 'przemRacz@op.pl', '799633214', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Jaroslaw Kempinski', 'jKempa@op.pl', '760102354', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Lukasz Salomon', 'salomon@op.pl', '700255604', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Piotr Gawron', 'bird@op.pl', '702569874', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Irena Pawlow', 'PawlowIrena@op.pl', '805222986', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Marek Kondzio', 'kondziu123@op.pl', '604211321', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Tymoteusz Babol', 'baboTym@op.pl', '603258987', 1);

INSERT INTO CLIENTS(CLIENT_NAME, CLIENT_MAIL, CLIENT_PHONE_NUMBER, BANK_ID)
VALUES('Peter Kowalsky', 'peterKowalsky@op.pl', '701456321', 1);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(1, 1, 5000);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(2, 1, 20000);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(3, 1, 5000);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(4, 1, 3000);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(5, 1, 100000);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(6, 1, 2500);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(7, 1, 10000);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(8, 1, 8700);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(9, 1, 6320);

INSERT INTO SAVING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE)
VALUES(10, 1, 13000);



INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(1, 1, 2000, 500);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(2, 1, 1500, 3000);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(3, 1, 2000, 500);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(4, 1, -400, 500);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(5, 1, 6000, 2500);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(6, 1, -1500, 3000);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(7, 1, 5000, 2000);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(8, 1, -900, 5000);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(9, 1, 6000, 3000);

INSERT INTO CHECKING_ACCOUNTS(CLIENT_ID, BANK_ID, BALANCE, OVERDRAFT)
VALUES(10, 1, 1500, 500);



INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 1, 1, 1);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 2, 2, 2);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 3, 3, 3);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 4, 4, 4);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 5, 5, 5);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 6, 6, 6);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 7, 7, 7);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 8, 8, 8);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 9, 9, 9);

INSERT INTO BANKS_ACCOUNTS(BANK_ID, CHECKING_ACCOUNT_ID, SAVING_ACCOUNT_ID, CLIENT_ID)
VALUES(1, 10, 10, 10);

SELECT  clients.client_id, clients.client_name,
saving_accounts.account_id as saving_account_id, saving_accounts.balance as saving_account_balance,
checking_accounts.account_id as checking_account_id, checking_accounts.balance as checking_account_balance
from clients, saving_accounts, checking_accounts
where saving_accounts.client_id = clients.client_id
and checking_accounts.client_id = clients.client_id;

SELECT  clients.client_id, clients.client_name,
checking_accounts.account_id as checking_account_id, checking_accounts.balance as checking_account_dept
from clients, checking_accounts
where checking_accounts.client_id = clients.client_id
and checking_accounts.balance < 0;

SELECT  clients.client_id, clients.client_name,
saving_accounts.account_id as saving_account_id, saving_accounts.balance as saving_account_deposit,
checking_accounts.account_id as checking_account_id, checking_accounts.balance as checking_account_deposit
from clients, saving_accounts, checking_accounts
where saving_accounts.client_id = clients.client_id
and checking_accounts.client_id = clients.client_id
and checking_accounts.balance > 1000
and saving_accounts.balance > 1000;

